cmake_minimum_required(VERSION 3.25)

project(TabConPPM LANGUAGES C VERSION 1.0)

option(BUILD_FOR_DOS "Build ${PROGRAM_NAME} for DOS using DJGPP" OFF)
option(BUILD_SHARED_LIBS "Build shared version libraries" ON)
option(BUILD_ONLY_LIBRARY "Build only libTabCon" OFF)
option(BUILD_FOR_I586 "Build ${PROJECT_NAME} for i586 (Intel Pentium) or higher" OFF)
# Windows Compiler Options
option(BUILD_USING_MSVCRT20 "Build ${PROJECT_NAME} using msvcrt20 (Windows Compiler Only)" OFF)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

set(CMAKE_C_FLAGS_DEBUG "-g -Wall")
set(CMAKE_C_FLAGS_RELEASE "-s -O2")

if(BUILD_FOR_DOS)
	set(CMAKE_C_COMPILER "i586-pc-msdosdjgpp-gcc")
	set(CMAKE_CXX_COMPILER "i586-pc-msdosdjgpp-g++")
	set(BUILD_SHARED_LIBS OFF)
	set(BUILD_FOR_I586 OFF)
endif()

if(BUILD_FOR_I586)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=i586 -fcf-protection=none")
endif()

if(BUILD_USING_MSVCRT20)
	if(WIN32)
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mcrtdll=msvcrt20")
	else()
		message(FATAL_ERROR "To build using msvcrt20 you must be using a Windows compiler")
	endif()
endif()

file(GLOB SOURCE_FILES "src/*.c")

add_subdirectory(src/submodules)
add_subdirectory(src/libTabCon)

if(NOT BUILD_ONLY_LIBRARY)
	include_directories(
		"src/submodules"
		"src/libTabCon"
	)
	
	configure_file(src/progInfo.h.in ${CMAKE_CURRENT_SOURCE_DIR}/src/progInfo.h @ONLY)
	
	add_executable(${PROJECT_NAME} ${SOURCE_FILES})
	target_link_libraries(
		${PROJECT_NAME}
		SHA1
		TabCon
	)
	if(BUILD_FOR_DOS)
		set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME "TABCNPPM")
		set_target_properties(${PROJECT_NAME} PROPERTIES SUFFIX ".exe")
	endif()
	set_property(TARGET ${PROJECT_NAME} PROPERTY BUILD_RPATH ".")
	target_include_directories(${PROJECT_NAME} PRIVATE src)
endif()